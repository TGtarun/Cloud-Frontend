{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst balanceForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    amount: \"\",\n    transactionMode: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleBalance = e => {\n    e.preventDefault();\n    console.log(this.state);\n    axios.post(\"https://jsonplaceholder.typicode.com/posts/1\", this.state).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleBalance,\n    values,\n    errors\n  };\n};\n\n_s(balanceForm, \"mN7iNI5J3n2P/UAi4Wj63z2Ixc4=\");\n\nexport default balanceForm;","map":{"version":3,"sources":["/home/shiru/VI sem/Cloud/Cloud-Assignment/frontend microservices/client/src/components/displays/balanceForm.js"],"names":["useState","useEffect","axios","balanceForm","callback","validate","values","setValues","amount","transactionMode","errors","setErrors","isSubmitting","setIsSubmitting","handleBalance","e","preventDefault","console","log","state","post","then","response","catch","error","Object","keys","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,MAAM,EAAE,EAD2B;AAEnCC,IAAAA,eAAe,EAAE;AAFkB,GAAD,CAApC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;;AAGA,QAAMc,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAjB,IAAAA,KAAK,CACFkB,IADH,CACQ,8CADR,EACwD,KAAKD,KAD7D,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KAPH;AASAb,IAAAA,SAAS,CAACN,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAO,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAdD;;AAgBAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,MAAM,CAACC,IAAP,CAAYhB,MAAZ,EAAoBiB,MAApB,KAA+B,CAA/B,IAAoCf,YAAxC,EAAsD;AACpDR,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACM,MAAD,CAJM,CAAT;AAMA,SAAO;AAAEI,IAAAA,aAAF;AAAiBR,IAAAA,MAAjB;AAAyBI,IAAAA;AAAzB,GAAP;AACD,CAhCD;;GAAMP,W;;AAkCN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst balanceForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    amount: \"\",\n    transactionMode: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n\n  const handleBalance = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/posts/1\", this.state)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleBalance, values, errors };\n};\n\nexport default balanceForm;\n"]},"metadata":{},"sourceType":"module"}