{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserProvider from \"../../contexts/UserProvider\";\nimport _ from \"lodash\";\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    amount: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  }; // var userData = useContext(UserProvider.context);\n  // var id = _.isEmpty(userData) ? 0 : userData[\"id\"];\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(values);\n    const body = {\n      balance: values.amount\n    }; // Simple PUT request with a JSON body using axios\n\n    await axios.put(`https://piggybankbackend.mybluemix.net/addFunds/113403933642326679347`, body).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"vJPF4T9vqreZM+NUozhNGCscEPk=\");\n\nexport default useForm;","map":{"version":3,"sources":["/home/shiru/VI sem/Cloud/Cloud Assignment (Submission)/piggy-bank-frontend/client/src/components/displays/useForm.js"],"names":["React","useContext","useState","useEffect","axios","UserProvider","_","useForm","callback","validate","values","setValues","amount","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","body","balance","put","then","response","catch","error","Object","keys","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AACnCU,IAAAA,MAAM,EAAE;AAD2B,GAAD,CAApC;AAGA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAV,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACS,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND,CAPsC,CAetC;AACA;;;AAEA,QAAME,YAAY,GAAG,MAAMJ,CAAN,IAAY;AAC/BA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,SAAS,CAACL,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAM,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AAEA,UAAMgB,IAAI,GAAG;AACXC,MAAAA,OAAO,EAAEjB,MAAM,CAACE;AADL,KAAb,CAP+B,CAY/B;;AACA,UAAMR,KAAK,CACRwB,GADG,CACE,uEADF,EAC0EF,IAD1E,EAEHG,IAFG,CAEGC,QAAD,IAAc;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACD,KAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAPG,CAAN;AAQD,GArBD;;AAuBA7B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8B,MAAM,CAACC,IAAP,CAAYrB,MAAZ,EAAoBsB,MAApB,KAA+B,CAA/B,IAAoCpB,YAAxC,EAAsD;AACpDP,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACK,MAAD,CAJM,CAAT;AAMA,SAAO;AAAEI,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8BZ,IAAAA,MAA9B;AAAsCG,IAAAA;AAAtC,GAAP;AACD,CAhDD;;GAAMN,O;;AAkDN,eAAeA,OAAf","sourcesContent":["import React, { useContext,useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserProvider from \"../../contexts/UserProvider\";\nimport _ from \"lodash\";\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    amount: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  // var userData = useContext(UserProvider.context);\n  // var id = _.isEmpty(userData) ? 0 : userData[\"id\"];\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    console.log(values);\n\n    const body = {\n      balance: values.amount,\n    };\n\n\n    // Simple PUT request with a JSON body using axios\n    await axios\n      .put(`https://piggybankbackend.mybluemix.net/addFunds/113403933642326679347`, body)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}